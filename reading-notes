# humbliepieserver.github.io
To have a growth mindset one must be able to understand and comprehend any new information that they learn and allow it to further the way they think giving a person multiple views of perspective. 
 I always say stay focused stay rigorous and if you fail to plan then you plan to fail
 Learning Markdown Notes: A markdown is a type of way you are able to style the text of a web page.  You can use a variety of formats from bold to italic while also being allowed to upload images as well.
 Markdowns can be used on github in subsections such as Gist or files labeled as ".md" or ".markdown"  Using markdonws is fairly simple when you're only editing certain words or lines of your text on the web.
 Headers for text files are labeled as "<h1> tags but can increase by number depending on the number of headers you'd like to add to your webpage
 There are many other tags that you are able to use with each tag having a differnt purpose.  Examples of other tags consist of: <body> <p> <br> <em> <ul> and <ol>
 The tag <ul> for example is a tag used on your text file to help start a list and you can allow tags to interact with each other becuse some fall into the same category as others.
 The tag <ol> for example would be placed inside of the open/closed <ul> tag to make an "ordered list" <ul> stands for "unordered list"
Editig for web doesn't have to stop there though for you are alos able to add images into the text file by using what coders call an image tag or <img></img>
In able to insert an actual image you must insert the url of whatever image you're trying to use.  The url is what appears at the top of the adress bar.  
Inserting images will only work if the image you want to use can be found on the internet but it won't all come together unless you have a source to better express the image you want to upload
Example: (<img_src="")
JavaScript is versatile and beginner-friendly. With more experience, you'll be able to create games, animated 2D and 3D graphics, comprehensive database-driven apps, and much more!

JavaScript itself is relatively compact, yet very flexible. Developers have written a variety of tools on top of the core JavaScript language, unlocking a vast amount of functionality with minimum effort. These include:

Browser Application Programming Interfaces (APIs) built into web browsers, providing functionality such as dynamically creating HTML and setting CSS styles; collecting and manipulating a video stream from a user's webcam, or generating 3D graphics and audio samples.
Third-party APIs that allow developers to incorporate functionality in sites from other content providers, such as Twitter or Facebook.
Third-party frameworks and libraries that you can apply to HTML to accelerate the work of building sites and applications.

Variable	Explanation	Example
String	This is a sequence of text known as a string. To signify that the value is a string, enclose it in single quote marks.	let myVariable = 'Bob';
Number	This is a number. Numbers don't have quotes around them.	let myVariable = 10;
Boolean	This is a True/False value. The words true and false are special keywords that don't need quote marks.	let myVariable = true;
Array	This is a structure that allows you to store multiple values in a single reference.	let myVariable = [1,'Bob','Steve',10];
Refer to each member of the array like this:
myVariable[0], myVariable[1], etc.
Object	This can be anything. Everything in JavaScript is an object and can be stored in a variable. Keep this in mind as you learn.	let myVariable = document.querySelector('h1');
All of the above examples too.
So why do we need variables? Variables are necessary to do anything interesting in programming. If values couldn't change, then you couldn't do anything dynamic, like personalize a greeting message or change an image displayed in an image gallery.
